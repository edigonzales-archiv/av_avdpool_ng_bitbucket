<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>trans_update_ownership</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_status>0</trans_status>
    <directory>&#47;</directory>
    <parameters>
    </parameters>
    <log>
      <read/>
      <write/>
      <input/>
      <output/>
      <update/>
      <rejected/>
      <connection/>
      <table/>
      <step_performance_table/>
      <use_batchid>N</use_batchid>
      <use_logfield>N</use_logfield>
      <size_limit_lines/>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>Y</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <modified_user>-</modified_user>
  <modified_date>2013&#47;08&#47;14 18:35:29.297</modified_date>
  </info>
  <notepads>
  </notepads>
  <connection>
    <name>av_avdpool_ch</name>
    <server>SQLite</server>
    <type>SQLITE</type>
    <access>Native</access>
    <database>&#47;home&#47;stefan&#47;Projekte&#47;av_avdpool_ch&#47;sqlite&#47;av_avdpool_ch.sqlite</database>
    <port>-1</port>
    <username/>
    <password>Encrypted </password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>-1</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>rosebud2</name>
    <server>localhost</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>rosebud2</database>
    <port>5432</port>
    <username>mspublic</username>
    <password>Encrypted 2be98afc86aa7f2e4a60abe65dc9ea6d9</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>5432</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>srsofaioi4531</name>
    <server>localhost</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>rosebud2</database>
    <port>5432</port>
    <username>stefan</username>
    <password>Encrypted 2be98afc86aa7f29ea21ca97cdb80fe88</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>5432</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>strelnikow</name>
    <server>localhost</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>strelnikow</database>
    <port>5432</port>
    <username>stefan</username>
    <password>Encrypted 2be98afc86aa7f29ea21ca97cdb80fe88</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>5432</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>xanadu2</name>
    <server>localhost</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>xanadu2</database>
    <port>5432</port>
    <username>stefan</username>
    <password>Encrypted 2be98afc86aa7f29ea21ca97cdb80fe88</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>5432</attribute></attribute>
      <attribute><code>PRESERVE_RESERVED_WORD_CASE</code><attribute>N</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>Y</attribute></attribute>
      <attribute><code>SUPPORTS_TIMESTAMP_DATA_TYPE</code><attribute>Y</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>xanadu2_test</name>
    <server>localhost</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>xanadu2_test</database>
    <port>5432</port>
    <username>stefan</username>
    <password>Encrypted 2be98afc86aa7f29ea21ca97cdb80fe88</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>5432</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <order>
  <hop> <from>Get rows from result</from><to>Grenzpunkte</to><enabled>Y</enabled> </hop>  <hop> <from>Get rows from result</from><to>Liegenschaft</to><enabled>Y</enabled> </hop>  <hop> <from>Get rows from result</from><to>LiegenschaftPos</to><enabled>Y</enabled> </hop>  <hop> <from>Get rows from result</from><to>SelbstRecht_Bergwerk</to><enabled>Y</enabled> </hop>  <hop> <from>Get rows from result</from><to>SelbstRecht_BergwerkPos</to><enabled>Y</enabled> </hop>  <hop> <from>Get rows from result</from><to>ProjLiegenschaft</to><enabled>Y</enabled> </hop>  <hop> <from>Get rows from result</from><to>ProjLiegenschaftPos</to><enabled>Y</enabled> </hop>  <hop> <from>Get rows from result</from><to>ProjSelbstRecht_Bergwerk</to><enabled>Y</enabled> </hop>  <hop> <from>Get rows from result</from><to>ProjSelbstRecht_BergwerkPos</to><enabled>Y</enabled> </hop>  </order>
  <step>
    <name>Get rows from result</name>
    <type>RowsFromResult</type>
    <description/>
    <distribute>N</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>      </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>485</xloc>
      <yloc>162</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Grenzpunkte</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>xanadu2</connection>
    <execute_each_row>Y</execute_each_row>
    <replace_variables>Y</replace_variables>
    <sql>DELETE FROM av_mopublic.liegenschaften__grenzpunkt WHERE bfsnr = ?;

INSERT INTO av_mopublic.liegenschaften__grenzpunkt (tid, geometrie, gueltigkeit, lagegen, lagezuv, punktzeichen, stand_am, bfsnr)
SELECT b.tid as tid, b.geometrie as geometrie, c.designation_d as gueltigkeit, b.lagegen as lagegen, d.designation_d as lagezuv, e.designation_d as punktzeichen,
 CASE 
   WHEN a.gueltigereintrag IS NULL THEN to_date(a.datum1, &apos;YYYYMMDD&apos;)
   ELSE to_date(a.gueltigereintrag, &apos;YYYYMMDD&apos;)
 END AS stand_am, 
 b.gem_bfs as bfsnr
FROM av_avdpool_ch.liegenschaften_lsnachfuehrung as a, av_avdpool_ch.liegenschaften_grenzpunkt as b, av_mopublic_meta.validity_type as c, av_mopublic_meta.reliability_type as d, av_mopublic_meta.mark_type as e
WHERE a.gem_bfs = ? AND b.gem_bfs = ?
AND b.entstehung = a.tid
AND a.gueltigkeit = c.code
AND b.lagezuv = d.code
AND b.punktzeichen = e.code;</sql>
    <insert_field/>
    <update_field/>
    <delete_field/>
    <read_field/>
    <arguments>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>174</xloc>
      <yloc>149</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Liegenschaft</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>xanadu2</connection>
    <execute_each_row>Y</execute_each_row>
    <replace_variables>Y</replace_variables>
    <sql>DELETE FROM av_mopublic.liegenschaften__liegenschaft WHERE bfsnr = ?;

INSERT INTO av_mopublic.liegenschaften__liegenschaft (tid, nbident, nummer, egris_egrid, vollstaendigkeit, flaechenmass, geometrie, stand_am, bfsnr)
SELECT a.tid as tid, a.nbident as nbident, a.nummer as nummer, a.egris_egrid as egris_egrid, c.designation_d as vollstaendigkeit, b.flaechenmass as flaechenmass, b.geometrie as geometrie, 
 CASE 
   WHEN d.gueltigereintrag IS NULL THEN to_date(d.datum1, &apos;YYYYMMDD&apos;)
   ELSE to_date(d.gueltigereintrag, &apos;YYYYMMDD&apos;)
 END AS stand_am, 
 b.gem_bfs as bfsnr
FROM av_avdpool_ch.liegenschaften_lsnachfuehrung as d, av_avdpool_ch.liegenschaften_grundstueck as a, av_avdpool_ch.liegenschaften_liegenschaft as b, av_mopublic_meta.completeness_type as c
WHERE a.gem_bfs = ? AND b.gem_bfs = ? AND d.gem_bfs = ? 
AND b.liegenschaft_von = a.tid
AND a.vollstaendigkeit = c.code
AND d.tid = a.entstehung;</sql>
    <insert_field/>
    <update_field/>
    <delete_field/>
    <read_field/>
    <arguments>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>201</xloc>
      <yloc>217</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>LiegenschaftPos</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>xanadu2</connection>
    <execute_each_row>Y</execute_each_row>
    <replace_variables>Y</replace_variables>
    <sql>DELETE FROM av_mopublic.liegenschaften__liegenschaftpos WHERE bfsnr = ?;

INSERT INTO av_mopublic.liegenschaften__liegenschaftpos(tid, liegenschaftpos_von, nbident, nummer, pos, ori, hali, vali, bfsnr, y, x, rot, hali_txt, vali_txt)
SELECT b.tid as tid, grundstueckpos_von as liegenschaftpos_von, a.nbident, a.nummer, b.pos,
        CASE
            WHEN b.ori IS NULL THEN 100::double precision
            ELSE b.ori
        END AS ori, 
        CASE 
            WHEN b.hali IS NULL THEN 1
            ELSE b.hali
        END as hali,
        CASE 
            WHEN b.vali IS NULL THEN 2
            ELSE b.vali
        END as vali,
b.gem_bfs AS bfsnr, ST_X(b.pos) AS y, ST_Y(b.pos) AS x, 
        CASE
            WHEN b.ori IS NULL THEN 0::double precision
            ELSE (100::double precision - b.ori) * 0.9::double precision
        END AS rot, 
        CASE 
            WHEN b.hali_txt IS NULL THEN &apos;Center&apos;
            ELSE b.hali_txt
        END as hali_txt,
        CASE 
            WHEN b.vali_txt IS NULL THEN &apos;Half&apos;
            ELSE b.vali_txt
        END as vali_txt
FROM av_avdpool_ch.liegenschaften_grundstueck a, av_avdpool_ch.liegenschaften_grundstueckpos b
WHERE a.gem_bfs = ? 
AND b.gem_bfs = ?
AND a.art = 0
AND a.tid::text = b.grundstueckpos_von::text;</sql>
    <insert_field/>
    <update_field/>
    <delete_field/>
    <read_field/>
    <arguments>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>230</xloc>
      <yloc>285</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>ProjLiegenschaft</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>xanadu2</connection>
    <execute_each_row>Y</execute_each_row>
    <replace_variables>Y</replace_variables>
    <sql>DELETE FROM av_mopublic.liegenschaften__projliegenschaft WHERE bfsnr = ?;

INSERT INTO av_mopublic.liegenschaften__projliegenschaft (tid, nbident, nummer, egris_egrid, vollstaendigkeit, flaechenmass, geometrie, stand_am, bfsnr)
SELECT a.tid as tid, a.nbident as nbident, a.nummer as nummer, a.egris_egrid as egris_egrid, c.designation_d as vollstaendigkeit, b.flaechenmass as flaechenmass, b.geometrie as geometrie, 
 CASE 
   WHEN d.gueltigereintrag IS NULL THEN to_date(d.datum1, &apos;YYYYMMDD&apos;)
   ELSE to_date(d.gueltigereintrag, &apos;YYYYMMDD&apos;)
 END AS stand_am, 
 b.gem_bfs as bfsnr
FROM av_avdpool_ch.liegenschaften_lsnachfuehrung as d, av_avdpool_ch.liegenschaften_projgrundstueck as a, av_avdpool_ch.liegenschaften_projliegenschaft as b, av_mopublic_meta.completeness_type as c
WHERE a.gem_bfs = ? AND b.gem_bfs = ? AND d.gem_bfs = ? 
AND b.projliegenschaft_von = a.tid
AND a.vollstaendigkeit = c.code
AND d.tid = a.entstehung;</sql>
    <insert_field/>
    <update_field/>
    <delete_field/>
    <read_field/>
    <arguments>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>500</xloc>
      <yloc>425</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>ProjLiegenschaftPos</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>xanadu2</connection>
    <execute_each_row>Y</execute_each_row>
    <replace_variables>Y</replace_variables>
    <sql>DELETE FROM av_mopublic.liegenschaften__projliegenschaftpos WHERE bfsnr = ?;

INSERT INTO av_mopublic.liegenschaften__projliegenschaftpos(tid, projliegenschaftpos_von, nbident, nummer, pos, ori, hali, vali, bfsnr, y, x, rot, hali_txt, vali_txt)
SELECT b.tid as tid, projgrundstueckpos_von as projliegenschaftpos_von, a.nbident, a.nummer, b.pos,
        CASE
            WHEN b.ori IS NULL THEN 100::double precision
            ELSE b.ori
        END AS ori, 
        CASE 
            WHEN b.hali IS NULL THEN 1
            ELSE b.hali
        END as hali,
        CASE 
            WHEN b.vali IS NULL THEN 2
            ELSE b.vali
        END as vali,
b.gem_bfs AS bfsnr, ST_X(b.pos) AS y, ST_Y(b.pos) AS x, 
        CASE
            WHEN b.ori IS NULL THEN 0::double precision
            ELSE (100::double precision - b.ori) * 0.9::double precision
        END AS rot, 
        CASE 
            WHEN b.hali_txt IS NULL THEN &apos;Center&apos;
            ELSE b.hali_txt
        END as hali_txt,
        CASE 
            WHEN b.vali_txt IS NULL THEN &apos;Half&apos;
            ELSE b.vali_txt
        END as vali_txt
FROM av_avdpool_ch.liegenschaften_projgrundstueck a, av_avdpool_ch.liegenschaften_projgrundstueckpos b
WHERE a.gem_bfs = ? 
AND b.gem_bfs = ?
AND a.art = 0
AND a.tid::text = b.projgrundstueckpos_von::text;</sql>
    <insert_field/>
    <update_field/>
    <delete_field/>
    <read_field/>
    <arguments>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>632</xloc>
      <yloc>398</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>ProjSelbstRecht_Bergwerk</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>xanadu2</connection>
    <execute_each_row>Y</execute_each_row>
    <replace_variables>Y</replace_variables>
    <sql>DELETE FROM av_mopublic.liegenschaften__projselbstrecht_bergwerk WHERE bfsnr = ?;

INSERT INTO av_mopublic.liegenschaften__projselbstrecht_bergwerk (tid, nbident, nummer, egris_egrid, vollstaendigkeit, grundstuecksart, flaechenmass, geometrie, stand_am, bfsnr)
SELECT a.tid as tid, a.nbident as nbident, a.nummer as nummer, a.egris_egrid as egris_egrid, c.designation_d as vollstaendigkeit, e.designation_d as grundstuecksart, b.flaechenmass as flaechenmass, b.geometrie as geometrie, 
 CASE 
   WHEN d.gueltigereintrag IS NULL THEN to_date(d.datum1, &apos;YYYYMMDD&apos;)
   ELSE to_date(d.gueltigereintrag, &apos;YYYYMMDD&apos;)
 END AS stand_am, 
 b.gem_bfs as bfsnr
FROM av_avdpool_ch.liegenschaften_lsnachfuehrung as d, av_avdpool_ch.liegenschaften_projgrundstueck as a, av_avdpool_ch.liegenschaften_projselbstrecht as b, av_mopublic_meta.completeness_type as c,av_mopublic_meta.realestate_type as e
WHERE a.gem_bfs = ? AND b.gem_bfs = ? AND d.gem_bfs = ? 
AND b.projselbstrecht_von = a.tid
AND a.vollstaendigkeit = c.code
AND d.tid = a.entstehung
AND (a.art - 1) = e.code
   UNION ALL
SELECT a.tid as tid, a.nbident as nbident, a.nummer as nummer, a.egris_egrid as egris_egrid, c.designation_d as vollstaendigkeit, e.designation_d as grundstuecksart, b.flaechenmass as flaechenmass, b.geometrie as geometrie, 
 CASE 
   WHEN d.gueltigereintrag IS NULL THEN to_date(d.datum1, &apos;YYYYMMDD&apos;)
   ELSE to_date(d.gueltigereintrag, &apos;YYYYMMDD&apos;)
 END AS stand_am, 
 b.gem_bfs as bfsnr
FROM av_avdpool_ch.liegenschaften_lsnachfuehrung as d, av_avdpool_ch.liegenschaften_projgrundstueck as a, av_avdpool_ch.liegenschaften_projbergwerk as b, av_mopublic_meta.completeness_type as c,av_mopublic_meta.realestate_type as e
WHERE a.gem_bfs = ? AND b.gem_bfs = ? AND d.gem_bfs = ? 
AND b.projbergwerk_von = a.tid
AND a.vollstaendigkeit = c.code
AND d.tid = a.entstehung
AND (a.art - 1) = e.code;</sql>
    <insert_field/>
    <update_field/>
    <delete_field/>
    <read_field/>
    <arguments>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>760</xloc>
      <yloc>339</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>ProjSelbstRecht_BergwerkPos</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>xanadu2</connection>
    <execute_each_row>Y</execute_each_row>
    <replace_variables>Y</replace_variables>
    <sql>DELETE FROM av_mopublic.liegenschaften__projselbstrecht_bergwerkpos WHERE bfsnr = ?;

INSERT INTO av_mopublic.liegenschaften__projselbstrecht_bergwerkpos(tid, selbstrecht_bergwerkpos_von, nbident, nummer, pos, ori, hali, vali, bfsnr, y, x, rot, hali_txt, vali_txt)
SELECT b.tid as tid, projgrundstueckpos_von as projselbstrecht_bergwerkpos_von, a.nbident, a.nummer, b.pos,
        CASE
            WHEN b.ori IS NULL THEN 100::double precision
            ELSE b.ori
        END AS ori, 
        CASE 
            WHEN b.hali IS NULL THEN 1
            ELSE b.hali
        END as hali,
        CASE 
            WHEN b.vali IS NULL THEN 2
            ELSE b.vali
        END as vali,
b.gem_bfs AS bfsnr, ST_X(b.pos) AS y, ST_Y(b.pos) AS x, 
        CASE
            WHEN b.ori IS NULL THEN 0::double precision
            ELSE (100::double precision - b.ori) * 0.9::double precision
        END AS rot, 
        CASE 
            WHEN b.hali_txt IS NULL THEN &apos;Center&apos;
            ELSE b.hali_txt
        END as hali_txt,
        CASE 
            WHEN b.vali_txt IS NULL THEN &apos;Half&apos;
            ELSE b.vali_txt
        END as vali_txt
FROM av_avdpool_ch.liegenschaften_projgrundstueck a, av_avdpool_ch.liegenschaften_projgrundstueckpos b
WHERE a.gem_bfs = ? 
AND b.gem_bfs = ?
AND a.art &gt; 0
AND a.tid::text = b.projgrundstueckpos_von::text;


</sql>
    <insert_field/>
    <update_field/>
    <delete_field/>
    <read_field/>
    <arguments>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>865</xloc>
      <yloc>258</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>SelbstRecht_Bergwerk</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>xanadu2</connection>
    <execute_each_row>Y</execute_each_row>
    <replace_variables>Y</replace_variables>
    <sql>DELETE FROM av_mopublic.liegenschaften__selbstrecht_bergwerk WHERE bfsnr = ?;

INSERT INTO av_mopublic.liegenschaften__selbstrecht_bergwerk (tid, nbident, nummer, egris_egrid, vollstaendigkeit, grundstuecksart, flaechenmass, geometrie, stand_am, bfsnr)
SELECT a.tid as tid, a.nbident as nbident, a.nummer as nummer, a.egris_egrid as egris_egrid, c.designation_d as vollstaendigkeit, e.designation_d as grundstuecksart, b.flaechenmass as flaechenmass, b.geometrie as geometrie, 
 CASE 
   WHEN d.gueltigereintrag IS NULL THEN to_date(d.datum1, &apos;YYYYMMDD&apos;)
   ELSE to_date(d.gueltigereintrag, &apos;YYYYMMDD&apos;)
 END AS stand_am, 
 b.gem_bfs as bfsnr
FROM av_avdpool_ch.liegenschaften_lsnachfuehrung as d, av_avdpool_ch.liegenschaften_grundstueck as a, av_avdpool_ch.liegenschaften_selbstrecht as b, av_mopublic_meta.completeness_type as c,av_mopublic_meta.realestate_type as e
WHERE a.gem_bfs = ? AND b.gem_bfs = ? AND d.gem_bfs = ? 
AND b.selbstrecht_von = a.tid
AND a.vollstaendigkeit = c.code
AND d.tid = a.entstehung
AND (a.art - 1) = e.code
   UNION ALL
SELECT a.tid as tid, a.nbident as nbident, a.nummer as nummer, a.egris_egrid as egris_egrid, c.designation_d as vollstaendigkeit, e.designation_d as grundstuecksart, b.flaechenmass as flaechenmass, b.geometrie as geometrie, 
 CASE 
   WHEN d.gueltigereintrag IS NULL THEN to_date(d.datum1, &apos;YYYYMMDD&apos;)
   ELSE to_date(d.gueltigereintrag, &apos;YYYYMMDD&apos;)
 END AS stand_am, 
 b.gem_bfs as bfsnr
FROM av_avdpool_ch.liegenschaften_lsnachfuehrung as d, av_avdpool_ch.liegenschaften_grundstueck as a, av_avdpool_ch.liegenschaften_bergwerk as b, av_mopublic_meta.completeness_type as c,av_mopublic_meta.realestate_type as e
WHERE a.gem_bfs = ? AND b.gem_bfs = ? AND d.gem_bfs = ? 
AND b.bergwerk_von = a.tid
AND a.vollstaendigkeit = c.code
AND d.tid = a.entstehung
AND (a.art - 1) = e.code;</sql>
    <insert_field/>
    <update_field/>
    <delete_field/>
    <read_field/>
    <arguments>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>254</xloc>
      <yloc>369</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>SelbstRecht_BergwerkPos</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>xanadu2</connection>
    <execute_each_row>Y</execute_each_row>
    <replace_variables>Y</replace_variables>
    <sql>DELETE FROM av_mopublic.liegenschaften__selbstrecht_bergwerkpos WHERE bfsnr = ?;

INSERT INTO av_mopublic.liegenschaften__selbstrecht_bergwerkpos(tid, selbstrecht_bergwerkpos_von, nbident, nummer, pos, ori, hali, vali, bfsnr, y, x, rot, hali_txt, vali_txt)
SELECT b.tid as tid, grundstueckpos_von as selbstrecht_bergwerkpos_von, a.nbident, a.nummer, b.pos,
        CASE
            WHEN b.ori IS NULL THEN 100::double precision
            ELSE b.ori
        END AS ori, 
        CASE 
            WHEN b.hali IS NULL THEN 1
            ELSE b.hali
        END as hali,
        CASE 
            WHEN b.vali IS NULL THEN 2
            ELSE b.vali
        END as vali,
b.gem_bfs AS bfsnr, ST_X(b.pos) AS y, ST_Y(b.pos) AS x, 
        CASE
            WHEN b.ori IS NULL THEN 0::double precision
            ELSE (100::double precision - b.ori) * 0.9::double precision
        END AS rot, 
        CASE 
            WHEN b.hali_txt IS NULL THEN &apos;Center&apos;
            ELSE b.hali_txt
        END as hali_txt,
        CASE 
            WHEN b.vali_txt IS NULL THEN &apos;Half&apos;
            ELSE b.vali_txt
        END as vali_txt
FROM av_avdpool_ch.liegenschaften_grundstueck a, av_avdpool_ch.liegenschaften_grundstueckpos b
WHERE a.gem_bfs = ? 
AND b.gem_bfs = ?
AND a.art &gt; 0
AND a.tid::text = b.grundstueckpos_von::text;</sql>
    <insert_field/>
    <update_field/>
    <delete_field/>
    <read_field/>
    <arguments>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
       <argument><name>gem_bfs</name></argument>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>352</xloc>
      <yloc>411</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
</transformation>
